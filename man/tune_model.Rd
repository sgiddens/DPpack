% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StatModels.R
\name{tune_model}
\alias{tune_model}
\title{Privacy-preserving Hyperparameter Tuning}
\usage{
tune_model(
  models,
  X,
  y,
  upper.bounds = NULL,
  lower.bounds = NULL,
  add.bias = FALSE
)
}
\arguments{
\item{models}{Vector of model objects, each initialized with a different
combination of hyperparameter values from the search space for tuning.
Currently, only binary classification models are supported. Each model
should be initialized with the same epsilon privacy parameter value eps.
The tuned model satisfies eps-level differential privacy.}

\item{X}{Dataframe of data to be used in tuning the model. Note it is assumed
the data rows and corresponding labels are randomly shuffled.}

\item{y}{Vector or matrix of true labels for each row of X.}

\item{upper.bounds}{Numeric vector of length ncol(X)+1 giving upper bounds on
the values in each column of X and the values in y. The last value in the
vector is assumed to be the upper bound on y, while the first ncol(X)
values are assumed to be in the same order as the corresponding columns of
X. Any value in the columns of X and y larger than the corresponding upper
bound is clipped at the bound.}

\item{lower.bounds}{Numeric vector of length ncol(X)+1 giving lower bounds on
the values in each column of X and the values in y. The last value in the
vector is assumed to be the lower bound on y, while the first ncol(X)
values are assumed to be in the same order as the corresponding columns of
X. Any value in the columns of X and y smaller than the corresponding lower
bound is clipped at the bound.}

\item{add.bias}{Boolean indicating whether to add a bias term to X. Defaults
to FALSE.}
}
\value{
Single model object selected from the input list models with tuned
parameters.
}
\description{
This function implements the privacy-preserving hyperparameter tuning
function \insertCite{chaudhuri2011}{DPpack} using the exponential mechanism.
It accepts a list of models with various chosen hyperparameters, a dataset X
with corresponding labels y, upper and lower bounds on the columns of X and
the values of y, and a boolean indicating whether to add bias in the
construction of each of the models. The data are split into m+1 equal groups,
where m is the number of models being compared. One group is set aside as the
validation group, and each of the other m groups are used to train each of
the given m models. The number of errors on the validation set is counted for
each model and used as the utility values in the exponential mechanism
(\code{\link{ExponentialMechanism}}) to select tuned model in a
privacy-preserving way.
}
\examples{
# Assume X is dataframe meeting assumptions for privacy
# Assume 2 columns of X each bounded between -1 and 1
# Assume y is 0 or 1 labels for each row of X
upper.bounds <- c( 1, 1, 1) # Bounds for X and y
lower.bounds <- c(-1,-1, 0) # Bounds for X and y
eps <- 1

# Grid of possible lambda values for tuning logistric regression model
grid.search <- c(100, 1, .0001)

lrdp1 <- LogisticRegressionDP$new("l2", eps, grid.search[1])
lrdp2 <- LogisticRegressionDP$new("l2", eps, grid.search[2])
lrdp3 <- LogisticRegressionDP$new("l2", eps, grid.search[3])
models <- c(lrdp1, lrdp2, lrdp3)
tuned.model <- tune_model(models, X, y, upper.bounds, lower.bounds)
tuned.model$lambda # Gives resulting selected hyperparameter

}
\references{
\insertRef{chaudhuri2011}{DPpack}
}
